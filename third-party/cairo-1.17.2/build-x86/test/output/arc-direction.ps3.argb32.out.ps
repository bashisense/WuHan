%!PS-Adobe-3.0
%%Creator: cairo 1.17.2 (https://cairographics.org)
%%CreationDate: Thu Jan  1 08:00:00 1970
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 61x61mm 172 172 0 () ()
%%BoundingBox: 0 0 172 172
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 61x61mm
%%PageBoundingBox: 0 0 172 172
172 172 cairo_set_page_size
%%EndPageSetup
q 0 0 172 172 rectclip
1 0 0 -1 0 172 cm q
1 g
0 0 172 172 rectfill
0 g
22 22 m 41.32 27.176 l 40.867 28.863 40.195 30.488 39.32 32 c f
64 22 m 81.32 12 l 82.195 13.512 82.867 15.137 83.32 16.824 c f
64 64 m 81.32 54 l 76.051 44.875 64.605 41.402 55.152 46.062 c 45.703 50.723
 41.488 61.918 45.523 71.652 c 49.555 81.391 60.449 86.324 70.43 82.938 
c 80.406 79.551 86.047 69.004 83.32 58.824 c f
22 64 m 41.32 69.176 l 44.047 58.996 38.406 48.449 28.43 45.062 c 18.449
 41.676 7.555 46.609 3.523 56.348 c -0.512 66.082 3.703 77.277 13.152 81.938
 c 22.605 86.598 34.051 83.125 39.32 74 c f
1 0 0 rg
150 22 m 130.68 27.176 l 131.133 28.863 131.805 30.488 132.68 32 c f
108 22 m 90.68 12 l 89.805 13.512 89.133 15.137 88.68 16.824 c f
108 64 m 90.68 54 l 95.949 44.875 107.395 41.402 116.848 46.062 c 126.297
 50.723 130.512 61.918 126.477 71.652 c 122.445 81.391 111.551 86.324 101.57
 82.938 c 91.594 79.551 85.953 69.004 88.68 58.824 c f
150 64 m 130.68 69.176 l 127.953 58.996 133.594 48.449 143.57 45.062 c 
153.551 41.676 164.445 46.609 168.477 56.348 c 172.512 66.082 168.297 77.277
 158.848 81.938 c 149.395 86.598 137.949 83.125 132.68 74 c f
1 0 1 rg
150 150 m 130.68 144.824 l 131.133 143.137 131.805 141.512 132.68 140 c
 f
108 150 m 90.68 160 l 89.805 158.488 89.133 156.863 88.68 155.176 c f
108 108 m 90.68 118 l 95.949 127.125 107.395 130.598 116.848 125.938 c 
126.297 121.277 130.512 110.082 126.477 100.348 c 122.445 90.609 111.551
 85.676 101.57 89.062 c 91.594 92.449 85.953 102.996 88.68 113.176 c f
150 108 m 130.68 102.824 l 127.953 113.004 133.594 123.551 143.57 126.938
 c 153.551 130.324 164.445 125.391 168.477 115.652 c 172.512 105.918 168.297
 94.723 158.848 90.062 c 149.395 85.402 137.949 88.875 132.68 98 c f
0 0 1 rg
22 150 m 41.32 144.824 l 40.867 143.137 40.195 141.512 39.32 140 c f
64 150 m 81.32 160 l 82.195 158.488 82.867 156.863 83.32 155.176 c f
64 108 m 81.32 118 l 76.051 127.125 64.605 130.598 55.152 125.938 c 45.703
 121.277 41.488 110.082 45.523 100.348 c 49.555 90.609 60.449 85.676 70.43
 89.062 c 80.406 92.449 86.047 102.996 83.32 113.176 c f
22 108 m 41.32 102.824 l 44.047 113.004 38.406 123.551 28.43 126.938 c 
18.449 130.324 7.555 125.391 3.523 115.652 c -0.512 105.918 3.703 94.723
 13.152 90.062 c 22.605 85.402 34.051 88.875 39.32 98 c f
Q Q
showpage
%%Trailer
%%EOF
