%!PS-Adobe-3.0
%%Creator: cairo 1.17.2 (https://cairographics.org)
%%CreationDate: Thu Jan  1 08:00:00 1970
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 90x90mm 256 256 0 () ()
%%BoundingBox: 0 0 256 256
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 90x90mm
%%PageBoundingBox: 0 0 256 256
256 256 cairo_set_page_size
%%EndPageSetup
q 0 0 256 256 rectclip
1 0 0 -1 0 256 cm q
0 g
0 0 256 256 rectfill
/CairoPattern {
q 0 0 32 32 rectclip
[ 32 0 0 32 0 0 ] concat
/CairoData [
<~J0c7Tp`n<?J:U!.n7Y3"$O;@&cjrZH1*[0_6_b4F;pl/AMT00]aHU!_%[4updO?`A=W<XJ
 -5,R-VHYO08)f_XjN]hEQd)GTq2H.I6AA8!FLi03!?du^-o/r1!j*'7dAI]tSR-A5V,h:#p
 SE2F>ch'Wef*qPs%]Lk/[dYcMU+Z%>,rH$]aAn1^-O<Ylc`iFJW8D8e(]TZ(O3l)E4IN[,6
 )u#7IYSmjoPS~>] def
/CairoDataIndex 0 def
/DeviceGray setcolorspace
<<
  /ImageType 1
  /Width 32
  /Height 32
  /Interpolate true
  /BitsPerComponent 8
  /Decode [ 0 1 ]
  /DataSource { cairo_data_source } /LZWDecode filter
  /ImageMatrix [ 32 0 0 -32 0 32 ]
>>
image
 Q } bind def
<< /PatternType 1
   /PaintType 1
   /TilingType 1
   /XStep 32 /YStep 32
   /BBox [0 0 32 32]
   /PaintProc { pop CairoPattern }
>>
[ 1 0 0 -1 -14.1 32 ]
makepattern setpattern
0 0 256 32 re f
/CairoPattern {
q 0 0 32 32 rectclip
[ 32 0 0 32 0 0 ] concat
/CairoData [
<~J0c7Tp`n<?J:U!.n7Y3"$O;@&cjrZH1*[0_6_b4F;pl/AMT00]aHU!_%[4updO?`A=W<XJ
 -5,R-VHYO08)f_XjN]hEQd)GTq2H.I6AA8!FLi03!?du^-o/r1!j*'7dAI]tSR-A5V,h:#p
 SE2F>ch'Wef*qPs%]Lk/[dYcMU+Z%>,rH$]aAn1^-O<Ylc`iFJW8D8e(]TZ(O3l)E4IN[,6
 )u#7IYSmjoPS~>] def
/CairoDataIndex 0 def
/DeviceGray setcolorspace
<<
  /ImageType 1
  /Width 32
  /Height 32
  /Interpolate true
  /BitsPerComponent 8
  /Decode [ 0 1 ]
  /DataSource { cairo_data_source } /LZWDecode filter
  /ImageMatrix [ 32 0 0 -32 0 32 ]
>>
image
 Q } bind def
<< /PatternType 1
   /PaintType 1
   /TilingType 1
   /XStep 32 /YStep 32
   /BBox [0 0 32 32]
   /PaintProc { pop CairoPattern }
>>
[ 1 0 0 -1 -14.1 32 ]
makepattern setpattern
3.5 32 256 32 re f
/CairoPattern {
q 0 0 32 32 rectclip
[ 32 0 0 32 0 0 ] concat
/CairoData [
<~J0c7Tp`n<?J:U!.n7Y3"$O;@&cjrZH1*[0_6_b4F;pl/AMT00]aHU!_%[4updO?`A=W<XJ
 -5,R-VHYO08)f_XjN]hEQd)GTq2H.I6AA8!FLi03!?du^-o/r1!j*'7dAI]tSR-A5V,h:#p
 SE2F>ch'Wef*qPs%]Lk/[dYcMU+Z%>,rH$]aAn1^-O<Ylc`iFJW8D8e(]TZ(O3l)E4IN[,6
 )u#7IYSmjoPS~>] def
/CairoDataIndex 0 def
/DeviceGray setcolorspace
<<
  /ImageType 1
  /Width 32
  /Height 32
  /Interpolate true
  /BitsPerComponent 8
  /Decode [ 0 1 ]
  /DataSource { cairo_data_source } /LZWDecode filter
  /ImageMatrix [ 32 0 0 -32 0 32 ]
>>
image
 Q } bind def
<< /PatternType 1
   /PaintType 1
   /TilingType 1
   /XStep 32 /YStep 32
   /BBox [0 0 32 32]
   /PaintProc { pop CairoPattern }
>>
[ 1 0 0 -1 -14.1 32 ]
makepattern setpattern
7 64 256 32 re f
/CairoPattern {
q 0 0 32 32 rectclip
[ 32 0 0 32 0 0 ] concat
/CairoData [
<~J0c7Tp`n<?J:U!.n7Y3"$O;@&cjrZH1*[0_6_b4F;pl/AMT00]aHU!_%[4updO?`A=W<XJ
 -5,R-VHYO08)f_XjN]hEQd)GTq2H.I6AA8!FLi03!?du^-o/r1!j*'7dAI]tSR-A5V,h:#p
 SE2F>ch'Wef*qPs%]Lk/[dYcMU+Z%>,rH$]aAn1^-O<Ylc`iFJW8D8e(]TZ(O3l)E4IN[,6
 )u#7IYSmjoPS~>] def
/CairoDataIndex 0 def
/DeviceGray setcolorspace
<<
  /ImageType 1
  /Width 32
  /Height 32
  /Interpolate true
  /BitsPerComponent 8
  /Decode [ 0 1 ]
  /DataSource { cairo_data_source } /LZWDecode filter
  /ImageMatrix [ 32 0 0 -32 0 32 ]
>>
image
 Q } bind def
<< /PatternType 1
   /PaintType 1
   /TilingType 1
   /XStep 32 /YStep 32
   /BBox [0 0 32 32]
   /PaintProc { pop CairoPattern }
>>
[ 1 0 0 -1 -14.1 32 ]
makepattern setpattern
10.5 96 256 32 re f
/CairoPattern {
q 0 0 32 32 rectclip
[ 32 0 0 32 0 0 ] concat
/CairoData [
<~J0c7Tp`n<?J:U!.n7Y3"$O;@&cjrZH1*[0_6_b4F;pl/AMT00]aHU!_%[4updO?`A=W<XJ
 -5,R-VHYO08)f_XjN]hEQd)GTq2H.I6AA8!FLi03!?du^-o/r1!j*'7dAI]tSR-A5V,h:#p
 SE2F>ch'Wef*qPs%]Lk/[dYcMU+Z%>,rH$]aAn1^-O<Ylc`iFJW8D8e(]TZ(O3l)E4IN[,6
 )u#7IYSmjoPS~>] def
/CairoDataIndex 0 def
/DeviceGray setcolorspace
<<
  /ImageType 1
  /Width 32
  /Height 32
  /Interpolate true
  /BitsPerComponent 8
  /Decode [ 0 1 ]
  /DataSource { cairo_data_source } /LZWDecode filter
  /ImageMatrix [ 32 0 0 -32 0 32 ]
>>
image
 Q } bind def
<< /PatternType 1
   /PaintType 1
   /TilingType 1
   /XStep 32 /YStep 32
   /BBox [0 0 32 32]
   /PaintProc { pop CairoPattern }
>>
[ 1 0 0 -1 -14.1 32 ]
makepattern setpattern
14 128 256 32 re f
/CairoPattern {
q 0 0 32 32 rectclip
[ 32 0 0 32 0 0 ] concat
/CairoData [
<~J0c7Tp`n<?J:U!.n7Y3"$O;@&cjrZH1*[0_6_b4F;pl/AMT00]aHU!_%[4updO?`A=W<XJ
 -5,R-VHYO08)f_XjN]hEQd)GTq2H.I6AA8!FLi03!?du^-o/r1!j*'7dAI]tSR-A5V,h:#p
 SE2F>ch'Wef*qPs%]Lk/[dYcMU+Z%>,rH$]aAn1^-O<Ylc`iFJW8D8e(]TZ(O3l)E4IN[,6
 )u#7IYSmjoPS~>] def
/CairoDataIndex 0 def
/DeviceGray setcolorspace
<<
  /ImageType 1
  /Width 32
  /Height 32
  /Interpolate true
  /BitsPerComponent 8
  /Decode [ 0 1 ]
  /DataSource { cairo_data_source } /LZWDecode filter
  /ImageMatrix [ 32 0 0 -32 0 32 ]
>>
image
 Q } bind def
<< /PatternType 1
   /PaintType 1
   /TilingType 1
   /XStep 32 /YStep 32
   /BBox [0 0 32 32]
   /PaintProc { pop CairoPattern }
>>
[ 1 0 0 -1 -14.1 32 ]
makepattern setpattern
17.5 160 256 32 re f
/CairoPattern {
q 0 0 32 32 rectclip
[ 32 0 0 32 0 0 ] concat
/CairoData [
<~J0c7Tp`n<?J:U!.n7Y3"$O;@&cjrZH1*[0_6_b4F;pl/AMT00]aHU!_%[4updO?`A=W<XJ
 -5,R-VHYO08)f_XjN]hEQd)GTq2H.I6AA8!FLi03!?du^-o/r1!j*'7dAI]tSR-A5V,h:#p
 SE2F>ch'Wef*qPs%]Lk/[dYcMU+Z%>,rH$]aAn1^-O<Ylc`iFJW8D8e(]TZ(O3l)E4IN[,6
 )u#7IYSmjoPS~>] def
/CairoDataIndex 0 def
/DeviceGray setcolorspace
<<
  /ImageType 1
  /Width 32
  /Height 32
  /Interpolate true
  /BitsPerComponent 8
  /Decode [ 0 1 ]
  /DataSource { cairo_data_source } /LZWDecode filter
  /ImageMatrix [ 32 0 0 -32 0 32 ]
>>
image
 Q } bind def
<< /PatternType 1
   /PaintType 1
   /TilingType 1
   /XStep 32 /YStep 32
   /BBox [0 0 32 32]
   /PaintProc { pop CairoPattern }
>>
[ 1 0 0 -1 -14.1 32 ]
makepattern setpattern
21 192 256 32 re f
/CairoPattern {
q 0 0 32 32 rectclip
[ 32 0 0 32 0 0 ] concat
/CairoData [
<~J0c7Tp`n<?J:U!.n7Y3"$O;@&cjrZH1*[0_6_b4F;pl/AMT00]aHU!_%[4updO?`A=W<XJ
 -5,R-VHYO08)f_XjN]hEQd)GTq2H.I6AA8!FLi03!?du^-o/r1!j*'7dAI]tSR-A5V,h:#p
 SE2F>ch'Wef*qPs%]Lk/[dYcMU+Z%>,rH$]aAn1^-O<Ylc`iFJW8D8e(]TZ(O3l)E4IN[,6
 )u#7IYSmjoPS~>] def
/CairoDataIndex 0 def
/DeviceGray setcolorspace
<<
  /ImageType 1
  /Width 32
  /Height 32
  /Interpolate true
  /BitsPerComponent 8
  /Decode [ 0 1 ]
  /DataSource { cairo_data_source } /LZWDecode filter
  /ImageMatrix [ 32 0 0 -32 0 32 ]
>>
image
 Q } bind def
<< /PatternType 1
   /PaintType 1
   /TilingType 1
   /XStep 32 /YStep 32
   /BBox [0 0 32 32]
   /PaintProc { pop CairoPattern }
>>
[ 1 0 0 -1 -14.1 32 ]
makepattern setpattern
24.5 224 256 32 re f
Q Q
showpage
%%Trailer
%%EOF
